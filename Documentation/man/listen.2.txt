LISTEN(2)                            Linux Programmer's Manual                            LISTEN(2)



NNAAMMEE
       listen - listen for connections on a socket

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssyyss//ssoocckkeett..hh>>

       iinntt lliisstteenn((iinntt _s_o_c_k_f_d,, iinntt _b_a_c_k_l_o_g));;

DDEESSCCRRIIPPTTIIOONN
       lliisstteenn() marks the socket referred to by _s_o_c_k_f_d as a passive socket, that is, as a socket
       that will be used to accept incoming connection requests using aacccceepptt(2).

       The _s_o_c_k_f_d argument is a file descriptor that refers to a socket of type SSOOCCKK__SSTTRREEAAMM or
       SSOOCCKK__SSEEQQPPAACCKKEETT.

       The _b_a_c_k_l_o_g argument defines the maximum length to which the queue of pending connections
       for _s_o_c_k_f_d may grow.  If a connection request arrives when the queue is full, the client may
       receive an error with an indication of EECCOONNNNRREEFFUUSSEEDD or, if the underlying protocol supports
       retransmission, the request may be ignored so that a later reattempt at connection succeeds.

RREETTUURRNN VVAALLUUEE
       On success, zero is returned.  On error, -1 is returned, and _e_r_r_n_o is set to indicate the
       error.

EERRRROORRSS
       EEAADDDDRRIINNUUSSEE
              Another socket is already listening on the same port.

       EEAADDDDRRIINNUUSSEE
              (Internet domain sockets) The socket referred to by _s_o_c_k_f_d had not previously been
              bound to an address and, upon attempting to bind it to an ephemeral port, it was
              determined that all port numbers in the ephemeral port range are currently in use.
              See the discussion of _/_p_r_o_c_/_s_y_s_/_n_e_t_/_i_p_v_4_/_i_p___l_o_c_a_l___p_o_r_t___r_a_n_g_e in iipp(7).

       EEBBAADDFF  The argument _s_o_c_k_f_d is not a valid file descriptor.

       EENNOOTTSSOOCCKK
              The file descriptor _s_o_c_k_f_d does not refer to a socket.

       EEOOPPNNOOTTSSUUPPPP
              The socket is not of a type that supports the lliisstteenn() operation.

CCOONNFFOORRMMIINNGG TTOO
       POSIX.1-2001, POSIX.1-2008, 4.4BSD (lliisstteenn() first appeared in 4.2BSD).

NNOOTTEESS
       To accept connections, the following steps are performed:

           1.  A socket is created with ssoocckkeett(2).

           2.  The socket is bound to a local address using bbiinndd(2), so that other sockets may be
               ccoonnnneecctt(2)ed to it.

           3.  A willingness to accept incoming connections and a queue limit for incoming
               connections are specified with lliisstteenn().

           4.  Connections are accepted with aacccceepptt(2).

       The behavior of the _b_a_c_k_l_o_g argument on TCP sockets changed with Linux 2.2.  Now it
       specifies the queue length for _c_o_m_p_l_e_t_e_l_y established sockets waiting to be accepted,
       instead of the number of incomplete connection requests.  The maximum length of the queue
       for incomplete sockets can be set using _/_p_r_o_c_/_s_y_s_/_n_e_t_/_i_p_v_4_/_t_c_p___m_a_x___s_y_n___b_a_c_k_l_o_g.  When
       syncookies are enabled there is no logical maximum length and this setting is ignored.  See
       ttccpp(7) for more information.

       If the _b_a_c_k_l_o_g argument is greater than the value in _/_p_r_o_c_/_s_y_s_/_n_e_t_/_c_o_r_e_/_s_o_m_a_x_c_o_n_n, then it
       is silently capped to that value.  Since Linux 5.4, the default in this file is 4096; in
       earlier kernels, the default value is 128.  In kernels before 2.4.25, this limit was a hard
       coded value, SSOOMMAAXXCCOONNNN, with the value 128.

EEXXAAMMPPLLEESS
       See bbiinndd(2).

SSEEEE AALLSSOO
       aacccceepptt(2), bbiinndd(2), ccoonnnneecctt(2), ssoocckkeett(2), ssoocckkeett(7)



Linux                                        2021-03-22                                   LISTEN(2)
