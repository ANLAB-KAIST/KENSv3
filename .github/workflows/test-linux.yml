name: Test Linux Environment

on:
  push:
    branches:
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        gcc: [8, 7]
        os: [ubuntu-18.04, ubuntu-20.04]
        include:
          - gcc: 9
            os: ubuntu-20.04
          - gcc: 10
            os: ubuntu-20.04

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install g++ gcc
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: sudo apt update && sudo apt install -y g++-${{ matrix.gcc }} gcc-${{ matrix.gcc }}

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_C_COMPILER=gcc-${{ matrix.gcc }} -DCMAKE_CXX_COMPILER=g++-${{ matrix.gcc }}

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: ./app/kens/test-kens-all-run-solution 
        
      - name: Test (Unreliable)
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: ./app/kens/test-kens-all-unreliable-run-solution 