name: Test WSL Environment

on:
  push:
    branches:
      - master


jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: wsl-bash {0}
    steps:
      - uses: actions/checkout@v2

      - uses: Vampire/setup-wsl@v1
        with:
          distribution: Ubuntu-20.04

      - name: Install g++ gcc
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: sudo apt update && sudo apt install -y cmake g++ gcc

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        working-directory: ${{github.workspace}}
        run: cmake -E make_directory build

      - name: Configure CMake
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++

      - name: Build
        working-directory: ${{github.workspace}}/build
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config Release

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: ./app/kens/test-kens-all-run-solution 
        
      - name: Test (Unreliable)
        working-directory: ${{github.workspace}}/build
        run: ./app/kens/test-kens-all-unreliable-run-solution 
